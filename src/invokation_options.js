const registrationOptions = {
    // The challenge is produced by the server; see the Security Considerations
    challenge: new Uint8Array([21, 31, 105 /* 29 more random bytes generated by the server */]),
    // Relying Party:
    rp: {
        id: "icicibank.com",
        name: "ICICI Bank Limited"
    },
    // User:
    user: {
        id: Uint8Array.from(window.atob("MIIBkzCCATigAwIBAjCCAZMwggE4oAMCAQIwggGTMII="), c => c.charCodeAt(0)),
        name: "test_user@icicibank.com",
        displayName: "Test User",
    },
    // This Relying Party will accept either an ES256 or RS256 credential, but
    // prefers an ES256 credential.
    pubKeyCredParams: [
        {
            type: "public-key",
            alg: -7 // "ES256" as registered in the IANA COSE Algorithms registry
        },
        {
            type: "public-key",
            alg: -257 // Value registered by this specification for "RS256"
        }
    ],
    authenticatorSelection: {
        // only stick to device specific authentication like Windows Hello / TouchID / FingerPrint authentication
        authenticatorAttachment: 'platform',
        // Try to use UV if possible. This is also the default.
        userVerification: "required",
        requireResidentKey: true,
        residentKey: 'required'
    },
    timeout: 360000,  // 6 minutes
    excludeCredentials: [
        // Donâ€™t re-register any authenticator that has one of these credentials
        { "id": Uint8Array.from(window.atob("ufJWp8YGlibm1Kd9XQBWN1WAw2jy5In2Xhon9HAqcXE="), c => c.charCodeAt(0)), "type": "public-key" },
        { "id": Uint8Array.from(window.atob("E/e1dhZc++mIsz4f9hb6NifAzJpF1V4mEtRlIPBiWdY="), c => c.charCodeAt(0)), "type": "public-key" }
    ],
};

const loginOptions = {
    challenge: new Uint8Array([21, 31, 105 /* 29 more random bytes generated by the server */]),
    timeout: 360000,  // 6 minutes
    rp: {
        id: "icicibank.com",
        name: "ICICI Bank Limited"
    },
    extensions: {
        uvm: true, // Include the User Verification Method extension
    },
    authenticatorSelection: {
        userVerification: "preferred"
    },
}

export { registrationOptions, loginOptions }